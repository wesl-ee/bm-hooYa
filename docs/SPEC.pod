=head1 How files are tagged

=head2 C<Files> table

One row for each file indexed by hooYa

=over

=item Id

This is an MD5 hash of the file; this is a fast way to organize files.
Typically, a user supplies the MD5 hash of the file s/he wants and hooYa
looks up that hash and serves w/e content is asked for.

=item Path

Path where the indexed file can be accessed

=item Size

Filesize in bytes

=item Class

Type of media. Supported values are I<anime>, I<single_image>, I<video>,
and I<television> but adding a new class only involves writing the code to
render it

=item Mimetype

Content type determined by your OS's magic.mime file

=item Indexed

The DATETIME the file was originally imported to hooYa!

=item By

User ID for the user who imported this file; not NULL for uploaded files

=back

=head2 C<TagMap> Table

One row for each file's tag

=over

=item FileId

MD5 hash of the file that this tag describes. This can describe at
most one (1) entry in L<`Files`|"`Files` Table">

=item Added

Date that the tag was added

=item TagId

Selects which Namespace -> Member pair this tag describes. This can describe
at most one (1) entry in L<`Tags`|"`Tags` Table">.

=item Author

User ID of the user who added this tag to this file

=back

=head2 C<Tags> Table

One row for each Namespace -> Member pair. These are pairs like
I<series> -> I<puella magi madoka magica>

=over

=item Id

Primary Key for each pair

=item Space

Describes a namespace, such as I<series>, I<character>, or some other similar
category. These spaces are B<not static>, so feel free to add as many spaces
as you want!

=item Member

Describes a member in a namespace, such as I<puella magi madoka magica> or
I<kaname madoka>

=back

Additionally, there is a table for each media class; this table stores the
properties of each file in a media type; for example, C<anime> has the
I<season> and I<episode> columns
