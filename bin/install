#!/usr/bin/perl
use strict;
use File::Basename;
use DBI;

use constant HOOYA_VERSION => '0.5';
use constant {
	FOREGROND_BLACK => '[0;30m',
	FOREGROUND_RED => '[0;31m',
	FOREGROUND_GREEN => '[0;32m',
	FOREGROUND_YELLOW => '[0;33m',
	FOREGROUND_BLUE => '[0;34m',
	FOREGROUND_MAGENTA => '[0;35m',
	FOREGROUND_CYAN => '[0;36m',
	FOREGROUND_WHITE => '[0;37m',
	FOREGROUND_DEFAULT => '[0;39m',

	BACKGROUND_BLACK => '[0;40m',
	BACKGROUND_RED => '[0;41m',
	BACKGROUND_GREEN => '[0;42m',
	BACKGROUND_YELLOW => '[0;43m',
	BACKGROUND_BLUE => '[0;44m',
	BACKGROUND_MAGENTA => '[0;45m',
	BACKGROUND_CYAN => '[0;46m',
	BACKGROUND_WHITE => '[0;47m',
	BACKGROUND_DEFAULT => '[0;49m',

	TEXT_RESET => '[0;0m',
	TEXT_BOLD => '[0;1m',
	TEXT_STANDOUT => '[0;3m',
	TEXT_BLINK => '[0;5m',
	TEXT_REVERSE => '[0;7m',
};
sub die_error
{
	die FOREGROUND_RED . @_[0] . FOREGROUND_DEFAULT . "\n";
}
sub notify_success
{
	print FOREGROUND_GREEN . @_[0] . FOREGROUND_DEFAULT . "\n";
}
sub notify_warn
{
	print FOREGROUND_YELLOW . @_[0] . FOREGROUND_DEFAULT . "\n";
}

print FOREGROUND_GREEN
	. "hooYa v" . HOOYA_VERSION
	. " installer\n"
. FOREGROUND_DEFAULT;

print TEXT_BOLD
	. "Please ensure you have installed all the necessary"
	. " components first!\n"
. TEXT_RESET;

# Read SQL settings from the config file
my ($CONFIG_MYSQL_HOOYA_HOST,
$CONFIG_MYSQL_HOOYA_USER,
$CONFIG_MYSQL_HOOYA_PASSWORD,
$CONFIG_MYSQL_HOOYA_DATABASE,
$CONFIG_HOOYA_STORAGE_PATH);

# Grab the PHP config file for accessing SQL
my $incfile =  dirname($0) . "/../includes/config.php";
open(FILE, $incfile);
while (<FILE>) {
	$CONFIG_MYSQL_HOOYA_HOST = $1 if (/["']CONFIG_MYSQL_HOOYA_HOST["'], ["'](.+)["']/);
	$CONFIG_MYSQL_HOOYA_USER = $1 if (/"CONFIG_MYSQL_HOOYA_USER", ["'](.+)["']/);
	$CONFIG_MYSQL_HOOYA_PASSWORD = $1 if (/["']CONFIG_MYSQL_HOOYA_PASSWORD["'], ["'](.+)["']/);
	$CONFIG_MYSQL_HOOYA_DATABASE = $1 if (/["']CONFIG_MYSQL_HOOYA_DATABASE["'], ["'](.+)["']/);
	$CONFIG_HOOYA_STORAGE_PATH = $1 if (/["']CONFIG_HOOYA_STORAGE_PATH["'], ["'](.+)["']/);
}
close(FILE);

# Jack in
# SQL
my $dsn = "DBI:mysql:database=" . $CONFIG_MYSQL_HOOYA_DATABASE
. ";host=" . $CONFIG_MYSQL_HOOYA_HOST;

my $dbh = DBI->connect(
	$dsn,
	$CONFIG_MYSQL_HOOYA_USER,
	$CONFIG_MYSQL_HOOYA_PASSWORD,
	{'PrintError' => 0}
);
if (!defined $dbh) {
	die_error DBI::errstr;
}
my $sth;

# Database creation
$sth = $dbh->prepare(
	"CREATE DATABASE hooya"
);
if ($sth->execute) {
	notify_success "Created the `hooya` database";
}
else {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"USE hooya;"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}

# Table creation
$sth = $dbh->prepare(
	"CREATE TABLE `Files` ("
	. "`Id` VARCHAR(128) NOT NULL,"
	. "`Path` VARCHAR(4096) DEFAULT NULL,"
	. "`Size` BIGINT(20) unsigned DEFAULT NULL,"
	. "`Class` VARCHAR(128) DEFAULT NULL,"
	. "`Indexed` datetime DEFAULT current_timestamp(),"
	. "`By` INT(11) DEFAULT NULL,"
	. "`Mimetype` VARCHAR(128) DEFAULT NULL,"
	. "PRIMARY KEY (`Id`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `TagMap` ("
	. "`FileId` VARCHAR(128) NOT NULL,"
	. "`Added` DATETIME DEFAULT CURRENT_TIMESTAMP,"
	. "`Author` INT(11) DEFAULT NULL,"
	. "`TagId` INT(11) NOT NULL,"
	. "UNIQUE KEY `FileId` (`FileId`, `TagId`),"
	. "CONSTRAINT `files` FOREIGN KEY (`FileId`)"
	. " REFERENCES `Files` (`Id`) ON DELETE CASCADE"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `Tags` ("
	. "`Id` INT(11) NOT NULL AUTO_INCREMENT,"
	. "`Space` VARCHAR(128) DEFAULT NULL,"
	. "`Member` VARCHAR(128) DEFAULT NULL,"
	. "PRIMARY KEY (`Id`),"
	. "UNIQUE KEY `Space` (`Space`, `Member`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `Alias` ("
	. "`Alias` VARCHAR(128) NOT NULL,"
	. "`Space` VARCHAR(128) DEFAULT NULL,"
	. "PRIMARY KEY (`Alias`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
# Example media_types, which are very extensible; adding one just involves
# adding a SQL table like this and putting its properties in
# includes/database.php
$sth = $dbh->prepare(
	"CREATE TABLE `single_image` ("
	. "`Id` varchar(128) NOT NULL,"
	. "`Width` int(11) NOT NULL DEFAULT -1,"
	. "`Height` int(11) NOT NULL DEFAULT -1,"
	. "`Ratio` float(6,3) unsigned GENERATED ALWAYS AS (`Width` / `Height`) PERSISTENT,"
	. "`Dominant Color` CHAR(6) DEFAULT NULL,"
	. "`Colors` VARCHAR(128) DEFAULT NULL,"
	. "PRIMARY KEY (`Id`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `video` ("
	. "`Id` varchar(128) NOT NULL,"
	. "`Width` int(11) NOT NULL DEFAULT -1,"
	. "`Height` int(11) NOT NULL DEFAULT -1,"
	. "`Ratio` float(6,3) unsigned GENERATED ALWAYS AS (`Width` / `Height`) PERSISTENT,"
	. "PRIMARY KEY (`Id`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `anime` ("
	. "`Id` varchar(128) NOT NULL,"
	. "`Season` int(11) DEFAULT NULL,"
	. "`Episode` varchar(16) DEFAULT NULL,"
	. "PRIMARY KEY (`Id`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `television` ("
	. "`Id` varchar(128) NOT NULL,"
	. "`Season` int(11) DEFAULT NULL,"
	. "`Episode` varchar(16) DEFAULT NULL,"
	. "PRIMARY KEY (`Id`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `movie` ("
	. "`Id` varchar(128) NOT NULL,"
	. "`Year` int(11) DEFAULT NULL,"
	. "PRIMARY KEY (`Id`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}

notify_success "Created the SQL structure";
